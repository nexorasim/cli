name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install validation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils jq yamllint
        npm install -g @stoplight/spectral-cli

    - name: Validate public/sitemap.xml
      run: |
        if [ -f "public/sitemap.xml" ]; then
          xmllint --noout public/sitemap.xml
          echo "sitemap.xml is valid"
        else
          echo "public/sitemap.xml not found"
          exit 1
        fi

    - name: Validate feeds XML files
      run: |
        for file in public/feeds/*.xml public/atom.xml public/rss.xml; do
          if [ -f "$file" ]; then
            xmllint --noout "$file"
            echo "$file is valid"
          else
            echo "$file not found, skipping"
          fi
        done

    - name: Validate public/robots.txt
      run: |
        if [ -f "public/robots.txt" ]; then
          if [ -s "public/robots.txt" ]; then
            echo "robots.txt is non-empty"
            cat public/robots.txt
          else
            echo "robots.txt is empty"
            exit 1
          fi
        else
          echo "public/robots.txt not found"
          exit 1
        fi

    - name: Validate OpenAPI specs
      run: |
        for file in openapi/*.yaml openapi/*.yml openapi/*.json; do
          if [ -f "$file" ]; then
            spectral lint "$file"
            echo "$file validated with Spectral"
          else
            echo "$file not found, skipping OpenAPI validation"
          fi
        done

    - name: Validate JSON files
      run: |
        find . -name "*.json" -not -path "./node_modules/*" -exec jq empty {} \;
        echo "All JSON files are valid"

    - name: Validate YAML files
      run: |
        find . -name "*.yml" -o -name "*.yaml" -not -path "./node_modules/*" | xargs -r yamllint -d relaxed
        echo "All YAML files are valid"

    - name: Validate nginx configs
      run: |
        if [ -d "nginx" ]; then
          docker run --rm -v $(pwd)/nginx:/etc/nginx/conf.d nginx:alpine nginx -t
          echo "nginx configs are valid"
        else
          echo "nginx directory not found, skipping"
        fi

    - name: Build application
      run: npm run build

    - name: Run tests (if any)
      run: |
        if npm run test --if-present; then
          echo "✅ Tests passed"
        else
          echo "⚠️ No tests found or tests failed"
        fi

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
